DROP SEQUENCE SEQ_ERROR;

DROP TABLE RESUMEN_PROCESO_POSTULANTE;

CREATE SEQUENCE SEQ_ERROR;

--CREAR TABLA REQUERIMIENTO 3.1
CREATE TABLE RESUMEN_PROCESO_POSTULANTE  (
    RUN_POSTULANTE                      VARCHAR2(12) NOT NULL,
    NOMBRE_POSTULANTE                   VARCHAR2(50) NOT NULL,
    EDAD	                            NUMBER(2) NOT NULL,
    PTJE_EDAD	                        NUMBER(4) NOT NULL,
    EST_CIVIL	                        VARCHAR2 (30) NOT NULL,
    PTJE_EST_CIVIL	                    NUMBER(4) NOT NULL,
    PUEBLO_IND_ORIG                     VARCHAR2 (50) NOT NULL,
    PTJE_PUEBLO_IND_ORIG                NUMBER(4) NOT NULL,
    ZONA_EXTREMA	                    VARCHAR2 (50) NOT NULL,
    PTJE_ZONA_EXTRENA	                NUMBER(4) NOT NULL,
    ANTEC_ACAD	                        NUMBER (4) NOT NULL,
    PJE_ANTEC_ACAD	                    NUMBER(4) NOT NULL,
    TRAYEC_EXP_LABORAL	                VARCHAR2 (50) NOT NULL,
    PTJE_TRAYEC_EXP_LABORAL	            NUMBER(4) NOT NULL,
    DOCENCIA_INVEST                     VARCHAR2 (50) NOT NULL,
    PTJE_DOCENCIA_INVEST 	            NUMBER(4) NOT NULL,
    OBJETIVO_ESTUDIO	                VARCHAR2 (50) NOT NULL,
    PTJE_OBJETIVO_ESTUDIO               NUMBER(4) NOT NULL,
    INTERES                             VARCHAR2 (50) NOT NULL,
    PTJE_INTERES                        NUMBER(4) NOT NULL,
    RETRIBUCION	                        VARCHAR2 (50) NOT NULL,
    PTJE_RETRIB                         NUMBER(4) NOT NULL,
    INST_EDUC_EXTRANJERA	            VARCHAR2 (50) NOT NULL,
    PTJE_RANKING_INST_EDUC_EXTRANJERA   NUMBER(4) NOT NULL,
    PTJE_TOTAL                          NUMBER(4) NOT NULL
);


--CREACIÓN DEL PROCEDIMIENTO PRINCIPAL
CREATE OR REPLACE PROCEDURE SP_RESUMEN_PROCESO_POSTULANTE
IS
    R_RESUMEN_PROCESO_POSTULANTE RESUMEN_PROCESO_POSTULANTE%ROWTYPE;
    
CURSOR C_RESUMEN_PROCESO_POSTULANTE IS
    SELECT TO_CHAR(P.NUM_RUN, '99G999G999') || '-' || P.DV_RUN AS "RUN POSTULANTE",
        P.PRI_NOMBRE || ' ' || P.SEG_NOMBRE || ' ' || P.AP_PATERNO || ' ' || P.AP_MATERNO AS "NOMBRE POSTULANTE",
        TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NACI) / 12) AS EDAD,
        PTJE.PUNTOS AS "PTJE. EDAD",
        --3.2.1.2.	Una función que obtenga la descripción del estado civil del postulante.
        PTJEC.PUNTOS AS "PTJE. EST. CIVIL",
        --3.2.1.3.	Una función que obtenga el pueblo indígena u originario al que pertenece el postulante.
        LPAD(NVL2(P.ID_PUE_ORI, 5, 0), 16, ' ') AS "PJE. PUEBLO IND. ORIG.",
        --3.2.1.4.	Una función que obtenga la zona extrema en la que vive el postulante.
        NVL(PZ.PUNTOS, 0) AS "PTJE. ZONA EXTRENA",
        AA.NOTA_TITULO AS "ANTEC. ACAD",
        PAA.PUNTOS AS "PJE. ANTEC. ACAD",
        TRUNC(MONTHS_BETWEEN(EL.FIN_EXP_LABORAL, EL.INICIO_EXP_LABORAL) / 12) ||' años' AS "TRAYEC./EXP.LABORAL",
        NVL(PJEL.PUNTOS, 0) AS "PTJE. TRAYEC./EXP.LABORAL",
        PO.EVALUA_DOCE_INVE AS "DOCENCIA/INVEST.",
        PAD.PUNTOS AS "PTJE. DOCENCIA/INVEST.",
        PO.EVALUA_OBJETIVO AS "OBJETIVO ESTUDIO",
        POE.PUNTOS AS "PTJE. OBJETIVO ESTUDIO",
        PO.EVALUA_INTERES AS "INTERES",
        NVL(PDI.PUNTOS, 0) AS "PTE. INTERESES",
        PO.EVALUA_RETRIBUCION AS "RETRIBUCION",
        PR.PUNTOS AS "PTJE. RETRIB.",
        --3.2.1.1.	Una función que obtenga el nombre de la institución de educación extranjera elegida por el postulante.AS "INST.EDUC.EXTRANJERA"
        NVL(PRAN.PUNTOS, 0) AS "PTJE. RANKING INST.EDUC.EXTRANJERA",
        PTJE.PUNTOS + PTJEC.PUNTOS + LPAD(NVL2(P.ID_PUE_ORI, 5, 0), 16, ' ') + NVL(PZ.PUNTOS, 0)
        + PAA.PUNTOS + NVL(PJEL.PUNTOS, 0) + PAD.PUNTOS + POE.PUNTOS + NVL(PDI.PUNTOS, 0) + PR.PUNTOS
        + NVL(PRAN.PUNTOS, 0) AS "PTJE. TOTAL"
    FROM POSTULANTE P
    JOIN PTJE_EDAD PTJE          
        ON ((TRUNC(MONTHS_BETWEEN(SYSDATE, P.FECHA_NACI) / 12) BETWEEN PTJE.EDAD_MIN AND PTJE.EDAD_MAX))
    JOIN ESTADO_CIVIL EC         
        ON (EC.ID_EST_CIVIL = P.ID_EST_CIVIL)
    JOIN PTJE_ESTADO_CIVIL PTJEC 
        ON (PTJEC.DESC_ESTADO_CIVIL = EC.DESC_EST_CIVIL)
    JOIN CIUDAD C                
        ON (C.ID_CIUDAD = P.ID_CIUDAD)
    LEFT JOIN REGION R                
        ON (R.ID_REGION = C.ID_REGION)
    LEFT JOIN PTJE_ZONA_EXTREMA PZ 
        ON (PZ.NOM_REGION = R.DESC_REGION)
    JOIN ANTECEDENTES_ACADEMICOS AA   
        ON (AA.ID_POSTULANTE = P.ID_POSTULANTE)
    JOIN PTJE_ANTEC_ACADEMICOS PAA  
        ON (AA.NOTA_TITULO BETWEEN PAA.NOTA_MIN AND PAA.NOTA_MAX)
    JOIN EXP_LABORAL EL     
        ON (EL.ID_POSTULANTE = P.ID_POSTULANTE)
    LEFT JOIN PTJE_EXP_LABORAL PJEL     
        ON (TRUNC(MONTHS_BETWEEN(EL.FIN_EXP_LABORAL, EL.INICIO_EXP_LABORAL) / 12) BETWEEN PJEL.ANOS_MIN AND PJEL.ANOS_MAX)
    JOIN POSTULACION PO 
        ON (PO.ID_POSTULANTE = P.ID_POSTULANTE)
    JOIN PTJE_ACT_DOCENCIA PAD 
        ON (PAD.NIVEL_ACT = PO.EVALUA_DOCE_INVE)
    JOIN PTJE_OBJETIVO_EST POE 
        ON (POE.EVALUACION = PO.EVALUA_OBJETIVO)
    LEFT JOIN PTJE_DECL_INTERES PDI 
        ON (PDI.EVALUACION = PO.EVALUA_INTERES)
    JOIN PTJE_RETRIBUCION PR 
        ON (PR.EVALUACION = PO.EVALUA_RETRIBUCION)
    LEFT JOIN INSTITUCION INS 
        ON (INS.ID_CIUDAD = C.ID_CIUDAD)
    LEFT JOIN PTJE_RANKING PRAN 
        ON (INS.RANKING BETWEEN PRAN.POSICION_MIN AND PRAN.POSICION_MAX)
    ORDER BY P.AP_PATERNO DESC, "PTJE. TOTAL" DESC;
BEGIN
    
    SELECT * FROM POSTULANTE;

EXCEPTION
    WHEN OTHERS THEN
        V_SQLERRM:=SQLERRM;
    INSERT INTO ERROR_COBRO_MENSUAL_TARJETA VALUES(SEQ_ERROR.NEXTVAL,'Error en bloque carga fotos',V_SQLERRM); 
END;